# Generated by Django 4.1.3 on 2022-11-15 09:59

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('tasks', '0001_initial'),
        ('labels', '0001_initial'),
        ('statuses', '0001_initial'),
    ]

    operations = [
        migrations.AddField(
            model_name='task',
            name='author',
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT,
                to=settings.AUTH_USER_MODEL,
                verbose_name='Автор'),
        ),
        migrations.AddField(
            model_name='task',
            name='executor',
            field=models.ForeignKey(
                null=True, on_delete=django.db.models.deletion.PROTECT,
                related_name='executor', to=settings.AUTH_USER_MODEL,
                verbose_name='Исполнитель'),
        ),
        migrations.AddField(
            model_name='task',
            name='label',
            field=models.ManyToManyField(
                through='tasks.LabelForTask',
                to='labels.label',
                verbose_name='Метка'),
        ),
        migrations.AddField(
            model_name='task',
            name='status',
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT,
                to='statuses.status',
                verbose_name='Статус'),
        ),
        migrations.AddField(
            model_name='labelfortask',
            name='label',
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                to='labels.label'),
        ),
        migrations.AddField(
            model_name='labelfortask',
            name='task',
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to='tasks.task'),
        ),
    ]
